[{"/Users/gala/Proyecto/christina/src/index.js":"1","/Users/gala/Proyecto/christina/src/services/api.js":"2","/Users/gala/Proyecto/christina/src/App.js":"3","/Users/gala/Proyecto/christina/src/reportWebVitals.js":"4","/Users/gala/Proyecto/christina/src/Routes.js":"5","/Users/gala/Proyecto/christina/src/containers/MaquinariaContainer/index.js":"6","/Users/gala/Proyecto/christina/src/containers/MaquinariaContainer/Form.js":"7","/Users/gala/Proyecto/christina/src/services/admin.js":"8","/Users/gala/Proyecto/christina/src/AppContext.js":"9","/Users/gala/Proyecto/christina/src/services/maquinaWs.js":"10","/Users/gala/Proyecto/christina/src/components/index.js":"11","/Users/gala/Proyecto/christina/src/utils/notification.js":"12","/Users/gala/Proyecto/christina/src/containers/ColaboradorContainer/Login.js":"13","/Users/gala/Proyecto/christina/src/services/colabingWs.js":"14","/Users/gala/Proyecto/christina/src/containers/Home.js":"15","/Users/gala/Proyecto/christina/src/containers/ColaboradorContainer/colabRegistro.js":"16","/Users/gala/Proyecto/christina/src/components/TarjetadeMaquina.js":"17","/Users/gala/Proyecto/christina/src/components/InputField.js":"18","/Users/gala/Proyecto/christina/src/services/clienteWs.js":"19","/Users/gala/Proyecto/christina/src/containers/PedidosContainer/index.js":"20","/Users/gala/Proyecto/christina/src/services/pedidoWs.js":"21","/Users/gala/Proyecto/christina/src/components/TarjetaPedido.js":"22","/Users/gala/Proyecto/christina/src/containers/PedidosContainer/lista.js":"23","/Users/gala/Proyecto/christina/src/containers/ColaboradorContainer/lista.js":"24","/Users/gala/Proyecto/christina/src/components/TarjetaColaborador.js":"25","/Users/gala/Proyecto/christina/src/components/TarjetaCliente.js":"26","/Users/gala/Proyecto/christina/src/containers/MaquinariaContainer/lista.js":"27","/Users/gala/Proyecto/christina/src/components/TarjetaPlista.js":"28","/Users/gala/Proyecto/christina/src/components/TarjetaMlista.js":"29","/Users/gala/Proyecto/christina/src/containers/ClienteContainer/Clientelista.js":"30","/Users/gala/Proyecto/christina/src/containers/ClienteContainer/Cliente.js":"31"},{"size":737,"mtime":1610220646451,"results":"32","hashOfConfig":"33"},{"size":186,"mtime":1610220646453,"results":"34","hashOfConfig":"33"},{"size":230,"mtime":1610220646446,"results":"35","hashOfConfig":"33"},{"size":362,"mtime":1610220646452,"results":"36","hashOfConfig":"33"},{"size":1658,"mtime":1610513803510,"results":"37","hashOfConfig":"33"},{"size":4044,"mtime":1610588154206,"results":"38","hashOfConfig":"33"},{"size":1837,"mtime":1610517910820,"results":"39","hashOfConfig":"33"},{"size":379,"mtime":1610319541579,"results":"40","hashOfConfig":"33"},{"size":103,"mtime":1610220646447,"results":"41","hashOfConfig":"33"},{"size":333,"mtime":1610505596791,"results":"42","hashOfConfig":"33"},{"size":411,"mtime":1610519777283,"results":"43","hashOfConfig":"33"},{"size":246,"mtime":1610220646454,"results":"44","hashOfConfig":"33"},{"size":5697,"mtime":1610422641580,"results":"45","hashOfConfig":"33"},{"size":524,"mtime":1610520069267,"results":"46","hashOfConfig":"33"},{"size":4069,"mtime":1610425140971,"results":"47","hashOfConfig":"33"},{"size":15202,"mtime":1610590705209,"results":"48","hashOfConfig":"33"},{"size":927,"mtime":1610519316504,"results":"49","hashOfConfig":"33"},{"size":573,"mtime":1610220646447,"results":"50","hashOfConfig":"33"},{"size":328,"mtime":1610520096104,"results":"51","hashOfConfig":"33"},{"size":6067,"mtime":1610588130097,"results":"52","hashOfConfig":"33"},{"size":518,"mtime":1610505586867,"results":"53","hashOfConfig":"33"},{"size":1239,"mtime":1610519334236,"results":"54","hashOfConfig":"33"},{"size":1785,"mtime":1610512621592,"results":"55","hashOfConfig":"33"},{"size":1822,"mtime":1610512609002,"results":"56","hashOfConfig":"33"},{"size":1059,"mtime":1610520875019,"results":"57","hashOfConfig":"33"},{"size":838,"mtime":1610519226105,"results":"58","hashOfConfig":"33"},{"size":1764,"mtime":1610512664077,"results":"59","hashOfConfig":"33"},{"size":1266,"mtime":1610519342621,"results":"60","hashOfConfig":"33"},{"size":928,"mtime":1610519319991,"results":"61","hashOfConfig":"33"},{"size":1765,"mtime":1610519812118,"results":"62","hashOfConfig":"33"},{"size":6121,"mtime":1610590959868,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"ktwvdu",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/gala/Proyecto/christina/src/index.js",[],["133","134"],"/Users/gala/Proyecto/christina/src/services/api.js",[],"/Users/gala/Proyecto/christina/src/App.js",[],"/Users/gala/Proyecto/christina/src/reportWebVitals.js",[],"/Users/gala/Proyecto/christina/src/Routes.js",[],"/Users/gala/Proyecto/christina/src/containers/MaquinariaContainer/index.js",["135"],"import React, {Component} from \"react\";\nimport AppContext from '../../AppContext';\nimport  {TarjetadeMaquina}  from \"../../components\";\nimport { todoscolaboradores } from \"../../services/admin\";\n//ws\nimport { registrarMaquina, infoMaquina, actualizarMaquina } from \"../../services/maquinaWs\";\nimport { buildNotification } from \"../../utils/notification\";\nimport Form from './Form'\n\n//esta visa nos servira para crear y para ver detalle de las propiedads\n\nexport default class MaquinariaContainer extends Component {\n    //Se inicialza context\n    static contextType = AppContext;\n\n   state = {\n       maquina:{},\n       listCol:[]\n    }\n\n    //utilizamos el ciclo de vida para cargar los datos de la maquina\n    componentWillMount(){\n        //valida que exista un colaborador de lo contrario redirect al registro \n        //const {state} = this.context\n        const {history} = this.props\n        todoscolaboradores()\n            .then((res)=>{\n             if(res.data.result.length>0){\n              this.setState({listCol:res.data.result})\n              console.log(this.state);\n             }else{\n                history.push(\"/colaborador/registro\")\n                return false\n             }\n            })\n            .catch((error)=>{\n                console.log(\"error\",error)\n            })\n\n\n        //utilizamos props de rutas match ya que mandaremos datos por medio del id\n        const {id} = this.props.match.params;\n        //si viene un id en los paramas realizamos un peticion al backend\n        if(id){\n            infoMaquina(id).then(res =>{\n                const {result} = res.data\n                this.setState({maquina: result})\n            })\n        }\n    }\n\n\n    //handle change para cachar los datos del textInput con una nueva propuesta de para guardar datos\n    handleChange = (e) => {\n         let {maquina} = this.state;\n         //nueva propuesta para guardar datos\n         maquina = {...maquina, [e.target.name]:e.target.value};\n         this.setState({maquina})\n    }\n\n\n    handleSubmit = (e)=>{\n        e.preventDefault();\n        const {maquina} = this.state;\n        //const {agregarMaquina} = this.context;\n        const {history} = this.props\n        const {id} = this.props.match.params;\n\n        //actiones como se reutiliza esta vista verificamos dependiendo de si existe un id\n        //realizamos un update o creamos una propiedad\n\n        const action = id ? actualizarMaquina : registrarMaquina //<---- son ws(webservices) chequen si se importaron\n        const params = id ? {maquina, id} : { maquina } // creamos los parametros depeiendo de la accion \n\n        action(params)\n        .then((res)=>{\n            const {result} = res.data\n            //agregarMaquina(result);\n            history.push(\"/listamaquinas\")\n        })\n        .catch(error=>{ \n            //almacenamos los errores una variable y sacamos solo los mensajes!!\n            const errors = Object.values(error.response.data.error)\n            //recorremos el arreglo y constuimos la notificacion (importar buildNotification)\n            //error = al mensaje, \"danger\" = al color de la notificacion, close = si tiene o no metodo para cerra\n        \n            errors.map((error) => buildNotification(error,\"danger\",\"close\"))\n        })\n    }\n    render(){\n        const {maquina,listCol} = this.state\n        return(\n            <section className=\"uk-section\">\n                <div className=\"uk-container\">\n                    <h3>Máquina</h3>\n                    <div className=\"uk-grid uk-child-width-1-2\">\n                        <Form \n                            maquina = {maquina}\n                            listCol = {listCol}\n                            handleChange={this.handleChange}\n                            handleSubmit={this.handleSubmit}\n                        />\n                        <div>\n                             <TarjetadeMaquina {...maquina} isDemo={true}/>\n                        </div>\n                    </div> \n                </div>\n            </section>\n        )\n    }\n}\n","/Users/gala/Proyecto/christina/src/containers/MaquinariaContainer/Form.js",[],"/Users/gala/Proyecto/christina/src/services/admin.js",[],"/Users/gala/Proyecto/christina/src/AppContext.js",[],"/Users/gala/Proyecto/christina/src/services/maquinaWs.js",[],"/Users/gala/Proyecto/christina/src/components/index.js",[],"/Users/gala/Proyecto/christina/src/utils/notification.js",[],"/Users/gala/Proyecto/christina/src/containers/ColaboradorContainer/Login.js",[],"/Users/gala/Proyecto/christina/src/services/colabingWs.js",[],"/Users/gala/Proyecto/christina/src/containers/Home.js",[],"/Users/gala/Proyecto/christina/src/containers/ColaboradorContainer/colabRegistro.js",[],"/Users/gala/Proyecto/christina/src/components/TarjetadeMaquina.js",[],"/Users/gala/Proyecto/christina/src/components/InputField.js",[],"/Users/gala/Proyecto/christina/src/services/clienteWs.js",[],"/Users/gala/Proyecto/christina/src/containers/PedidosContainer/index.js",["136"],"import React, { Component } from \"react\";\nimport { InputField } from \"../../components\";\nimport {ingresarPedido,actualizarPedido,infoPedido} from \"../../services/pedidoWs\";\nimport { todoscolaboradores, todosclientes } from \"../../services/admin\";\nimport { buildNotification } from \"../../utils/notification\";\nimport AppContext from \"../../AppContext\";\nimport  {TarjetaPedido}  from \"../../components\";\nimport dayjs from \"dayjs\";\nimport LocalizedFormat from \"dayjs/plugin/localizedFormat\";\ndayjs.extend(LocalizedFormat);\n\nclass PedidoForm extends Component {\n  static contextType = AppContext;\n  state = {\n    pedido: {},\n    listCli: [],\n    listCol: [],\n    clientevalue: 0,\n    colvalue: 0\n  };\n\n  componentWillMount(){\n    //valida que exista un colaborador de lo contrario redirect al registro \n    //const {state} = this.context\n    const {history} = this.props\n    todoscolaboradores()\n        .then((res)=>{\n         if(res.data.result.length>0){\n          this.setState({listCol:res.data.result})\n          console.log(this.state);\n         }else{\n            history.push(\"/colaborador/registro\")\n            return false\n         }\n        })\n        .catch((error)=>{\n            console.log(\"error\",error)\n        })\n        todosclientes()\n        .then((res)=>{\n         if(res.data.result.length>0){\n          this.setState({listCli:res.data.result})\n          console.log(this.state);\n         }else{\n            history.push(\"/cliente\")\n            return false\n         }\n        })\n        .catch((error)=>{\n            console.log(\"error\",error)\n        })\n\n    //utilizamos props de rutas match ya que mandaremos datos por medio del id\n    const {id} = this.props.match.params;\n    //si viene un id en los paramas realizamos un peticion al backend\n    if(id){\n        infoPedido(id).then(res =>{\n            const {result} = res.data\n            this.setState({pedido: result})\n        })\n    }\n}\n\n  handleChange = (e) => {\n    let { pedido } = this.state;\n    pedido = { ...pedido, [e.target.name]: e.target.value };\n    this.setState({ pedido });\n  };\n\n  handleSubmit = (e)=>{\n    e.preventDefault();\n    const {pedido} = this.state;\n    console.log(pedido)\n    //const {agregarpedido} = this.context;\n    const {history} = this.props\n    const {id} = this.props.match.params;\n\n    //actiones como se reutiliza esta vista verificamos dependiendo de si existe un id\n    //realizamos un update o creamos una propiedad\n\n    const action = id ? actualizarPedido : ingresarPedido //<---- son ws(webservices) chequen si se importaron\n    const params = id ? {pedido, id} : { pedido } // creamos los parametros depeiendo de la accion \n\n    action(params)\n    .then((res)=>{\n        const {result} = res.data\n        history.push(\"/listapedidos\")\n    })\n    .catch(error=>{ \n        //almacenamos los errores una variable y sacamos solo los mensajes!!\n        const errors = Object.values(error.response.data.error)\n        //recorremos el arreglo y constuimos la notificacion (importar buildNotification)\n        //error = al mensaje, \"danger\" = al color de la notificacion, close = si tiene o no metodo para cerra\n    \n        errors.map((error) => buildNotification(error,\"danger\",\"close\"))\n    })\n}\n\n  render() {\n    const { pedido,listCol, listCli } = this.state;\n    return (\n      <section className=\"uk-section\">\n        <div className=\"uk-container\">\n          <h2 className=\"\">Pedido</h2>\n          <div className=\"uk-grid uk-child-width-1-2\">\n          <form onSubmit={this.handleSubmit}>\n            <InputField\n              name=\"cantidad\"\n              type=\"number\"\n              min=\"1\"\n              value={pedido.cantidad}\n              handleChange={this.handleChange}\n              placeholder=\"Cantidad\"\n            />\n            <div className=\"uk-margin\">\n              <div className=\"uk-form-controls\">\n             <select name='_cliente'value={pedido['_cliente']? pedido['_cliente']:''} onChange={this.handleChange} className=\"uk-select\">\n                <option value={0}>Selecciona al Cliente</option>\n                {listCli.map((item,i)=> <option value={item._id} key={item._id}>{item.nombre}</option>)}\n            </select> \n            </div>\n            </div>\n            <div className=\"uk-margin\">\n            <div className=\"uk-form-controls\">\n            <select name='_colaborador'value={pedido['_colaborador'] ? pedido['_colaborador']:''} onChange={this.handleChange} className=\"uk-select\">\n              <option value={0}>Selecciona al Colaborador</option>\n              {listCol.map((item,i)=> <option value={item._id} key={item._id}>{item.nombre}</option>)}\n            </select>\n            </div>\n            </div>\n            <InputField\n              name=\"fecha_de_inicio\"\n              type=\"date\"\n              value={dayjs(pedido.fecha_de_inicio).format(\"YYYY-MM-DD\")}\n              handleChange={this.handleChange}\n              placeholder=\"Fecha de Inicio\"\n            />\n             <InputField\n              name=\"fecha_de_termino\"\n              type=\"date\"\n              value={dayjs(pedido.fecha_de_termino).format(\"YYYY-MM-DD\")}\n              handleChange={this.handleChange}ç\n              placeholder=\"Fecha de Termino\"\n              />\n            <div className=\"uk-margin\">\n            <div className=\"uk-form-controls\">\n              <select name=\"estatus\" value={pedido['estatus']? pedido['estatus']:'En espera'} onChange={this.handleChange} className=\"uk-select\">\n                <option value='En espera'>En espera</option>\n                <option value='En proceso'>En proceso</option>\n                <option value='Cancelada'>Cancelada</option>\n                <option value='Terminada'>Terminada</option>\n              </select>\n              </div>\n              </div>\n            <button type=\"submit\" className=\"uk-button uk-button-primary\">\n              Guardar\n            </button>\n          </form>\n          <div>\n          <TarjetaPedido {...pedido} isDemo={true} />\n        </div>\n      </div>\n      </div>\n  </section>\n    );\n  }\n}\n\nexport default PedidoForm;","/Users/gala/Proyecto/christina/src/services/pedidoWs.js",[],"/Users/gala/Proyecto/christina/src/components/TarjetaPedido.js",[],"/Users/gala/Proyecto/christina/src/containers/PedidosContainer/lista.js",["137"],"import React, { Component } from \"react\";\nimport { TarjetaPlista } from \"../../components\";\nimport { todospedidos } from \"../../services/admin\";\nimport {infoPedido} from \"../../services/pedidoWs\";\nimport AppContext from \"../../AppContext\";\n\n\nexport default class ListaPedidosContainer extends Component {\n    //Se inicialza context\n    static contextType = AppContext;\n\n   state = {\n       listPed:[]\n    }\n\ncomponentWillMount(){\n    //valida que exista un colaborador de lo contrario redirect al registro \n    //const {state} = this.context\n    const {history} = this.props\n    todospedidos()\n        .then((res)=>{\n         if(res.data.result.length>0){\n          this.setState({listPed:res.data.result})\n          console.log(this.state);\n         }else{\n            history.push(\"/pedido\")\n            return false\n         }\n        })\n        .catch((error)=>{\n            console.log(\"error\",error)\n        })\n\n\n    //utilizamos props de rutas match ya que mandaremos datos por medio del id\n    const {id} = this.props.match.params;\n    //si viene un id en los paramas realizamos un peticion al backend\n    if(id){\n        infoPedido(id).then(res =>{\n            const {result} = res.data\n            this.setState({pedido: result})\n        })\n    }\n}\nrender(){\n    const {pedido, listPed} = this.state;\n    console.log(listPed);\n    return(\n        <section className=\"uk-section\">\n            <div className=\"uk-container\">\n                <h3>Lista de Pedidos</h3>\n                <div className=\"uk-grid uk-child-width-1-2\">\n                    <div>\n                        {listPed.map((item,i)=>\n                         <TarjetaPlista key={i}{...item} isDemo={true} />)}\n                    </div>\n                </div> \n            </div>\n        </section>\n    )\n}\n}\n","/Users/gala/Proyecto/christina/src/containers/ColaboradorContainer/lista.js",["138"],"import React, { Component } from \"react\";\nimport { TarjetaColaborador } from \"../../components\";\nimport { todoscolaboradores } from \"../../services/admin\";\nimport {infoColaborador} from \"../../services/colabingWs\";\nimport AppContext from \"../../AppContext\";\n\n\nexport default class ListaColaboradorsContainer extends Component {\n    //Se inicialza context\n    static contextType = AppContext;\n\n   state = {\n       listCol:[]\n    }\n\ncomponentWillMount(){\n    //valida que exista un colaborador de lo contrario redirect al registro \n    //const {state} = this.context\n    const {history} = this.props\n    todoscolaboradores()\n        .then((res)=>{\n         if(res.data.result.length>0){\n          this.setState({listCol:res.data.result})\n          console.log(this.state);\n         }else{\n            history.push(\"/colaborador/registro\")\n            return false\n         }\n        })\n        .catch((error)=>{\n            console.log(\"error\",error)\n        })\n\n\n    //utilizamos props de rutas match ya que mandaremos datos por medio del id\n    const {id} = this.props.match.params;\n    //si viene un id en los paramas realizamos un peticion al backend\n    if(id){\n        infoColaborador(id).then(res =>{\n            const {result} = res.data\n            this.setState({colaborador: result})\n        })\n    }\n}\nrender(){\n    const {colaborador, listCol} = this.state\n    return(\n        <section className=\"uk-section\">\n            <div className=\"uk-container\">\n                <h3>Lista de Colaboradores</h3>\n                <div className=\"uk-grid uk-child-width-1-2\">\n                    <div>\n                    {listCol.map((item,i)=>\n                         <TarjetaColaborador key={i}{...item} isDemo={true} />)}\n                    </div>\n                </div> \n            </div>\n        </section>\n    )\n}\n}","/Users/gala/Proyecto/christina/src/components/TarjetaColaborador.js",[],"/Users/gala/Proyecto/christina/src/components/TarjetaCliente.js",[],"/Users/gala/Proyecto/christina/src/containers/MaquinariaContainer/lista.js",["139"],"import React, { Component } from \"react\";\nimport { TarjetaMlista } from \"../../components\";\nimport { todasmaquinas } from \"../../services/admin\";\nimport {infoMaquina} from \"../../services/maquinaWs\";\nimport AppContext from \"../../AppContext\";\n\n\nexport default class ListaMaquinasContainer extends Component {\n    //Se inicialza context\n    static contextType = AppContext;\n\n   state = {\n       listMaq:[]\n    }\n\ncomponentWillMount(){\n    //valida que exista un colaborador de lo contrario redirect al registro \n    //const {state} = this.context\n    const {history} = this.props\n    todasmaquinas()\n        .then((res)=>{\n         if(res.data.result.length>0){\n          this.setState({listMaq:res.data.result})\n          console.log(this.state);\n         }else{\n            history.push(\"/maquina\")\n            return false\n         }\n        })\n        .catch((error)=>{\n            console.log(\"error\",error)\n        })\n\n\n    //utilizamos props de rutas match ya que mandaremos datos por medio del id\n    const {id} = this.props.match.params;\n    //si viene un id en los paramas realizamos un peticion al backend\n    if(id){\n        infoMaquina(id).then(res =>{\n            const {result} = res.data\n            this.setState({maquina: result})\n        })\n    }\n}\nrender(){\n    const {maquina, listMaq} = this.state\n    return(\n        <section className=\"uk-section\">\n            <div className=\"uk-container\">\n                <h3>Lista de Máquinas</h3>\n                <div className=\"uk-grid uk-child-width-1-2\">\n                    <div>\n                    {listMaq.map((item,i)=>\n                         <TarjetaMlista key={i}{...item} isDemo={true} />)}\n                    </div>\n                </div> \n            </div>\n        </section>\n    )\n}\n}","/Users/gala/Proyecto/christina/src/components/TarjetaPlista.js",[],"/Users/gala/Proyecto/christina/src/components/TarjetaMlista.js",[],"/Users/gala/Proyecto/christina/src/containers/ClienteContainer/Clientelista.js",["140"],"import React, { Component } from \"react\";\nimport { TarjetaCliente } from \"../../components\";\nimport { todosclientes } from \"../../services/admin\";\nimport {infoCliente} from \"../../services/clienteWs\";\nimport AppContext from \"../../AppContext\";\n\n\nexport default class ListaClientesContainer extends Component {\n    //Se inicialza context\n    static contextType = AppContext;\n\n   state = {\n       listCli:[]\n    }\n\ncomponentWillMount(){\n    //valida que exista un colaborador de lo contrario redirect al registro \n    //const {state} = this.context\n    const {history} = this.props\n    todosclientes()\n        .then((res)=>{\n         if(res.data.result.length>0){\n          this.setState({listCli:res.data.result})\n          console.log(this.state);\n         }else{\n            history.push(\"/cliente\")\n            return false\n         }\n        })\n        .catch((error)=>{\n            console.log(\"error\",error)\n        })\n\n\n    //utilizamos props de rutas match ya que mandaremos datos por medio del id\n    const {id} = this.props.match.params;\n    //si viene un id en los paramas realizamos un peticion al backend\n    if(id){\n        infoCliente(id).then(res =>{\n            const {result} = res.data\n            this.setState({cliente: result})\n        })\n    }\n}\nrender(){\n    const {cliente, listCli} = this.state\n    return(\n        <section className=\"uk-section\">\n            <div className=\"uk-container\">\n                <h3>Lista de Clientes</h3>\n                <div className=\"uk-grid uk-child-width-1-2\">\n                    <div>\n                    {listCli.map((item,i)=>\n                         <TarjetaCliente key={i}{...item} isDemo={true} />)}\n                    </div>\n                </div> \n            </div>\n        </section>\n    )\n}\n}","/Users/gala/Proyecto/christina/src/containers/ClienteContainer/Cliente.js",["141"],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":77,"column":20,"nodeType":"148","messageId":"149","endLine":77,"endColumn":26},{"ruleId":"146","severity":1,"message":"147","line":86,"column":16,"nodeType":"148","messageId":"149","endLine":86,"endColumn":22},{"ruleId":"146","severity":1,"message":"150","line":46,"column":12,"nodeType":"148","messageId":"149","endLine":46,"endColumn":18},{"ruleId":"146","severity":1,"message":"151","line":46,"column":12,"nodeType":"148","messageId":"149","endLine":46,"endColumn":23},{"ruleId":"146","severity":1,"message":"152","line":46,"column":12,"nodeType":"148","messageId":"149","endLine":46,"endColumn":19},{"ruleId":"146","severity":1,"message":"153","line":46,"column":12,"nodeType":"148","messageId":"149","endLine":46,"endColumn":19},{"ruleId":"146","severity":1,"message":"154","line":10,"column":24,"nodeType":"148","messageId":"149","endLine":10,"endColumn":31},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'result' is assigned a value but never used.","Identifier","unusedVar","'pedido' is assigned a value but never used.","'colaborador' is assigned a value but never used.","'maquina' is assigned a value but never used.","'cliente' is assigned a value but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]