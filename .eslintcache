[{"/Users/Sputnik/Desktop/manager_front/src/App.js":"1","/Users/Sputnik/Desktop/manager_front/src/Routes.js":"2","/Users/Sputnik/Desktop/manager_front/src/containers/authContainers/AuthContainer.js":"3","/Users/Sputnik/Desktop/manager_front/src/index.js":"4","/Users/Sputnik/Desktop/manager_front/src/reportWebVitals.js":"5"},{"size":200,"mtime":1608410063197,"results":"6","hashOfConfig":"7"},{"size":272,"mtime":1608410092824,"results":"8","hashOfConfig":"7"},{"size":4511,"mtime":1608408670100,"results":"9","hashOfConfig":"7"},{"size":840,"mtime":1608410216741,"results":"10","hashOfConfig":"7"},{"size":362,"mtime":1608263682531,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1edk781",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/Sputnik/Desktop/manager_front/src/App.js",[],["25","26"],"/Users/Sputnik/Desktop/manager_front/src/Routes.js",["27","28"],"/Users/Sputnik/Desktop/manager_front/src/containers/authContainers/AuthContainer.js",["29","30","31"],"import React, {Component} from \"react\";\n\n\nexport default class AuthContainer extends Component {\n    //usar static para poder usar context\n    static contextType = AppContext;\n\n    //state === minibase de datos para la clase e hijos en caso de que los herede (o se los pase)\n    state = {\n      data:{}\n    }\n\n    // esta funcion es para esuchar todo lo que estemos tecleando y \n    // poder guardarlo en data (esta en el state)\n    // para puros inputs\n    handleChange = (event)=>{\n                // {key:value}\n        const { value, name} = event.target;\n        let { data } = this.state\n\n        data[name] = value\n\n        this.setState({ data })\n    }\n    //esta funcion es para enviar los datos a la base de datos y validar \n    //esto va en el form \n    onSubmit = (event) => {\n        event.preventDefault()\n        console.log(\"Voy a enviar datos\")\n        login(this.state.data).then((response)=>{\n            //aqui andetro si todo sale bien \n            //monstramos un mensaje y mandamos a la siguiente seccion\n            this.setState({ data:{}})\n            //vamos a guardar los datos en local para ya no volver a realizar \n            //una peticion \n            //estructura basica localSotrage.metodo(\"llave\",JSON.stringyfy(\"dylan\")) //PURO TEXTO\n            // si dato es un objeto o arreglo hay que convertilo a texto plano!! JSON.stringyfy(dato)\n           \n            localStorage.setItem( \"user\",JSON.stringify( response.data.user ) )\n            //setearemos el usuario hasta el app D:!!\n            //destoructurando\n            \n            this.context.setUser(response.data.user)\n            this.props.history.push(\"/\")\n\n        }).catch((error)=>{\n            console.log(\"hay un error\",error)\n        })\n\n        \n    }\n\n    render(){\n        //aque podemos declarar const var y let\n        const {handleChange, onSubmit} = this;\n        const {data} = this.state;\n\n        return(\n            <section className=\"uk-section\">\n                <div className=\"uk-container uk-flex uk-flex-center\">\n                    <div className=\"uk-width-1-4\">\n                        <h3>Bienveido </h3>\n                        <form\n                        // metodo={(event)=>onSumit(event)}\n                            onSubmit={onSubmit}\n                         className=\"uk-width-1-1 uk-form-stacked uk-flex uk-flex-center uk-flex-column\"\n                        >\n                            <div className=\"uk-margin\">\n                                <div className=\"uk-inline\">\n                                    <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\n                                    <input \n                                        className=\"uk-input\"\n                                        type=\"email\"\n                                        name=\"email\"\n                                        onChange={handleChange} \n                                        required\n                                        value={data[\"email\"] ? data[\"email\"] : \"\"}    \n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"uk-margin\">\n                                <div className=\"uk-inline\">\n                                    <span className=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: lock\"></span>\n                                    <input \n                                        className=\"uk-input\" \n                                        type=\"password\"\n                                        required\n                                        name=\"password\"\n                                        onChange={handleChange}\n                                        value={data[\"password\"] ? data[\"password\"] : \"\"}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"uk-text-meta\">\n                                AÃºn no tienes cuenta?{\" \"}\n                                <Link className=\"uk-text-primary\" to=\"/signup\" >\n                                    Create una cuenta Morr@\n                                </Link>\n                            </div>\n                            <button className=\"uk-button uk-button-primary\">\n                                Entrar\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}","/Users/Sputnik/Desktop/manager_front/src/index.js",[],"/Users/Sputnik/Desktop/manager_front/src/reportWebVitals.js",[],["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":16,"nodeType":"40","messageId":"41","endLine":1,"endColumn":25},{"ruleId":"38","severity":1,"message":"42","line":3,"column":8,"nodeType":"40","messageId":"41","endLine":3,"endColumn":21},{"ruleId":"43","severity":2,"message":"44","line":6,"column":26,"nodeType":"40","messageId":"45","endLine":6,"endColumn":36},{"ruleId":"43","severity":2,"message":"46","line":30,"column":9,"nodeType":"40","messageId":"45","endLine":30,"endColumn":14},{"ruleId":"47","severity":2,"message":"48","line":97,"column":34,"nodeType":"49","endLine":97,"endColumn":38},{"ruleId":"34","replacedBy":"50"},{"ruleId":"36","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'AuthContainer' is defined but never used.","no-undef","'AppContext' is not defined.","undef","'login' is not defined.","react/jsx-no-undef","'Link' is not defined.","JSXIdentifier",["52"],["53"],"no-global-assign","no-unsafe-negation"]